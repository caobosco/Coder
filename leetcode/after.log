
a.out:     file format elf64-x86-64


Disassembly of section .init:

0000000000400390 <_init>:
  400390:	48 83 ec 08          	sub    $0x8,%rsp
  400394:	e8 53 00 00 00       	callq  4003ec <call_gmon_start>
  400399:	48 83 c4 08          	add    $0x8,%rsp
  40039d:	c3                   	retq   

Disassembly of section .plt:

00000000004003a0 <__libc_start_main@plt-0x10>:
  4003a0:	ff 35 62 0c 20 00    	pushq  0x200c62(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4003a6:	ff 25 64 0c 20 00    	jmpq   *0x200c64(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4003ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004003b0 <__libc_start_main@plt>:
  4003b0:	ff 25 62 0c 20 00    	jmpq   *0x200c62(%rip)        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  4003b6:	68 00 00 00 00       	pushq  $0x0
  4003bb:	e9 e0 ff ff ff       	jmpq   4003a0 <_init+0x10>

Disassembly of section .text:

00000000004003c0 <_start>:
  4003c0:	31 ed                	xor    %ebp,%ebp
  4003c2:	49 89 d1             	mov    %rdx,%r9
  4003c5:	5e                   	pop    %rsi
  4003c6:	48 89 e2             	mov    %rsp,%rdx
  4003c9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  4003cd:	50                   	push   %rax
  4003ce:	54                   	push   %rsp
  4003cf:	49 c7 c0 a0 05 40 00 	mov    $0x4005a0,%r8
  4003d6:	48 c7 c1 10 05 40 00 	mov    $0x400510,%rcx
  4003dd:	48 c7 c7 cc 04 40 00 	mov    $0x4004cc,%rdi
  4003e4:	e8 c7 ff ff ff       	callq  4003b0 <__libc_start_main@plt>
  4003e9:	f4                   	hlt    
  4003ea:	66 90                	xchg   %ax,%ax

00000000004003ec <call_gmon_start>:
  4003ec:	48 83 ec 08          	sub    $0x8,%rsp
  4003f0:	48 8b 05 01 0c 20 00 	mov    0x200c01(%rip),%rax        # 600ff8 <_DYNAMIC+0x1d0>
  4003f7:	48 85 c0             	test   %rax,%rax
  4003fa:	74 02                	je     4003fe <call_gmon_start+0x12>
  4003fc:	ff d0                	callq  *%rax
  4003fe:	48 83 c4 08          	add    $0x8,%rsp
  400402:	c3                   	retq   
  400403:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40040a:	00 00 00 
  40040d:	0f 1f 00             	nopl   (%rax)

0000000000400410 <deregister_tm_clones>:
  400410:	b8 37 10 60 00       	mov    $0x601037,%eax
  400415:	55                   	push   %rbp
  400416:	48 2d 30 10 60 00    	sub    $0x601030,%rax
  40041c:	48 83 f8 0e          	cmp    $0xe,%rax
  400420:	48 89 e5             	mov    %rsp,%rbp
  400423:	77 02                	ja     400427 <deregister_tm_clones+0x17>
  400425:	5d                   	pop    %rbp
  400426:	c3                   	retq   
  400427:	b8 00 00 00 00       	mov    $0x0,%eax
  40042c:	48 85 c0             	test   %rax,%rax
  40042f:	74 f4                	je     400425 <deregister_tm_clones+0x15>
  400431:	5d                   	pop    %rbp
  400432:	bf 30 10 60 00       	mov    $0x601030,%edi
  400437:	ff e0                	jmpq   *%rax
  400439:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400440 <register_tm_clones>:
  400440:	b8 30 10 60 00       	mov    $0x601030,%eax
  400445:	55                   	push   %rbp
  400446:	48 2d 30 10 60 00    	sub    $0x601030,%rax
  40044c:	48 c1 f8 03          	sar    $0x3,%rax
  400450:	48 89 e5             	mov    %rsp,%rbp
  400453:	48 89 c2             	mov    %rax,%rdx
  400456:	48 c1 ea 3f          	shr    $0x3f,%rdx
  40045a:	48 01 d0             	add    %rdx,%rax
  40045d:	48 89 c6             	mov    %rax,%rsi
  400460:	48 d1 fe             	sar    %rsi
  400463:	75 02                	jne    400467 <register_tm_clones+0x27>
  400465:	5d                   	pop    %rbp
  400466:	c3                   	retq   
  400467:	ba 00 00 00 00       	mov    $0x0,%edx
  40046c:	48 85 d2             	test   %rdx,%rdx
  40046f:	74 f4                	je     400465 <register_tm_clones+0x25>
  400471:	5d                   	pop    %rbp
  400472:	bf 30 10 60 00       	mov    $0x601030,%edi
  400477:	ff e2                	jmpq   *%rdx
  400479:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400480 <__do_global_dtors_aux>:
  400480:	80 3d a9 0b 20 00 00 	cmpb   $0x0,0x200ba9(%rip)        # 601030 <__TMC_END__>
  400487:	75 11                	jne    40049a <__do_global_dtors_aux+0x1a>
  400489:	55                   	push   %rbp
  40048a:	48 89 e5             	mov    %rsp,%rbp
  40048d:	e8 7e ff ff ff       	callq  400410 <deregister_tm_clones>
  400492:	5d                   	pop    %rbp
  400493:	c6 05 96 0b 20 00 01 	movb   $0x1,0x200b96(%rip)        # 601030 <__TMC_END__>
  40049a:	f3 c3                	repz retq 
  40049c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004004a0 <frame_dummy>:
  4004a0:	48 83 3d 78 09 20 00 	cmpq   $0x0,0x200978(%rip)        # 600e20 <__JCR_END__>
  4004a7:	00 
  4004a8:	74 1b                	je     4004c5 <frame_dummy+0x25>
  4004aa:	b8 00 00 00 00       	mov    $0x0,%eax
  4004af:	48 85 c0             	test   %rax,%rax
  4004b2:	74 11                	je     4004c5 <frame_dummy+0x25>
  4004b4:	55                   	push   %rbp
  4004b5:	bf 20 0e 60 00       	mov    $0x600e20,%edi
  4004ba:	48 89 e5             	mov    %rsp,%rbp
  4004bd:	ff d0                	callq  *%rax
  4004bf:	5d                   	pop    %rbp
  4004c0:	e9 7b ff ff ff       	jmpq   400440 <register_tm_clones>
  4004c5:	e9 76 ff ff ff       	jmpq   400440 <register_tm_clones>
  4004ca:	66 90                	xchg   %ax,%ax

00000000004004cc <main>:
int main(){
  4004cc:	55                   	push   %rbp
  4004cd:	48 89 e5             	mov    %rsp,%rbp
	char *str="1009";
  4004d0:	48 c7 45 f8 b4 05 40 	movq   $0x4005b4,-0x8(%rbp)
  4004d7:	00 
	int a = sizeof(str);
  4004d8:	c7 45 f4 08 00 00 00 	movl   $0x8,-0xc(%rbp)
	int pos = 0;
  4004df:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
	//while(str[++pos] != '\0');
	while(str[pos++] != '\0');
  4004e6:	90                   	nop
  4004e7:	8b 45 f0             	mov    -0x10(%rbp),%eax
  4004ea:	48 63 d0             	movslq %eax,%rdx
  4004ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4004f1:	48 01 d0             	add    %rdx,%rax
  4004f4:	0f b6 00             	movzbl (%rax),%eax
  4004f7:	84 c0                	test   %al,%al
  4004f9:	0f 95 c0             	setne  %al
  4004fc:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
  400500:	84 c0                	test   %al,%al
  400502:	75 e3                	jne    4004e7 <main+0x1b>
	return 0;
  400504:	b8 00 00 00 00       	mov    $0x0,%eax
}
  400509:	5d                   	pop    %rbp
  40050a:	c3                   	retq   
  40050b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000400510 <__libc_csu_init>:
  400510:	48 89 6c 24 d8       	mov    %rbp,-0x28(%rsp)
  400515:	4c 89 64 24 e0       	mov    %r12,-0x20(%rsp)
  40051a:	48 8d 2d f7 08 20 00 	lea    0x2008f7(%rip),%rbp        # 600e18 <__init_array_end>
  400521:	4c 8d 25 e8 08 20 00 	lea    0x2008e8(%rip),%r12        # 600e10 <__frame_dummy_init_array_entry>
  400528:	4c 89 6c 24 e8       	mov    %r13,-0x18(%rsp)
  40052d:	4c 89 74 24 f0       	mov    %r14,-0x10(%rsp)
  400532:	4c 89 7c 24 f8       	mov    %r15,-0x8(%rsp)
  400537:	48 89 5c 24 d0       	mov    %rbx,-0x30(%rsp)
  40053c:	48 83 ec 38          	sub    $0x38,%rsp
  400540:	4c 29 e5             	sub    %r12,%rbp
  400543:	41 89 fd             	mov    %edi,%r13d
  400546:	49 89 f6             	mov    %rsi,%r14
  400549:	48 c1 fd 03          	sar    $0x3,%rbp
  40054d:	49 89 d7             	mov    %rdx,%r15
  400550:	e8 3b fe ff ff       	callq  400390 <_init>
  400555:	48 85 ed             	test   %rbp,%rbp
  400558:	74 1c                	je     400576 <__libc_csu_init+0x66>
  40055a:	31 db                	xor    %ebx,%ebx
  40055c:	0f 1f 40 00          	nopl   0x0(%rax)
  400560:	4c 89 fa             	mov    %r15,%rdx
  400563:	4c 89 f6             	mov    %r14,%rsi
  400566:	44 89 ef             	mov    %r13d,%edi
  400569:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40056d:	48 83 c3 01          	add    $0x1,%rbx
  400571:	48 39 eb             	cmp    %rbp,%rbx
  400574:	75 ea                	jne    400560 <__libc_csu_init+0x50>
  400576:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
  40057b:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
  400580:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
  400585:	4c 8b 6c 24 20       	mov    0x20(%rsp),%r13
  40058a:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
  40058f:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
  400594:	48 83 c4 38          	add    $0x38,%rsp
  400598:	c3                   	retq   
  400599:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004005a0 <__libc_csu_fini>:
  4005a0:	f3 c3                	repz retq 
  4005a2:	66 90                	xchg   %ax,%ax

Disassembly of section .fini:

00000000004005a4 <_fini>:
  4005a4:	48 83 ec 08          	sub    $0x8,%rsp
  4005a8:	48 83 c4 08          	add    $0x8,%rsp
  4005ac:	c3                   	retq   
